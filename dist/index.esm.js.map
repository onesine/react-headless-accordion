{"version":3,"file":"index.esm.js","sources":["../src/components/AccordionProvider.tsx","../src/components/Accordion.tsx","../src/components/AccordionItemProvider.tsx","../src/components/AccordionItem.tsx","../src/components/AccordionHeader.tsx","../src/components/AccordionBody.tsx"],"sourcesContent":["import React, {createContext, useCallback, useMemo, useRef, useState} from \"react\";\nimport {Tag, AccordionType, Items, Transition} from \"../types\";\n\ninterface AccordionStore {\n    accordionRef:  React.MutableRefObject<null> | null,\n    items: Items,\n    setItems: (value: Items) => void,\n    transition?: Transition | null,\n    alwaysOpen?: boolean\n}\n\nexport const AccordionContext = createContext<AccordionStore>({\n    accordionRef: null,\n    items: {},\n    setItems: (data) => {},\n    transition: null,\n    alwaysOpen: false\n});\n\nexport const AccordionProvider: React.FC<AccordionType> = ({children, as, transition, alwaysOpen}) => {\n    const accordionRef = useRef(null);\n    const [items, setItems] = useState<Items>({});\n\n    const TagName = useMemo(() => {\n        if(as && [\"div\", \"ul\"].includes(as)) {\n            return as;\n        }\n        return \"div\";\n    }, [as]);\n\n    const printTag = useCallback(() => {\n        const div = (\n            <div ref={accordionRef}>\n                {children}\n            </div>\n        );\n\n        switch (TagName) {\n            case \"div\":\n                return div;\n            case \"ul\":\n                return (\n                    <ul ref={accordionRef}>\n                        {children}\n                    </ul>\n                )\n            default :\n                return div;\n        }\n    }, []);\n\n    const value = useMemo(() => {\n        return {\n            accordionRef,\n            items,\n            setItems,\n            transition,\n            alwaysOpen\n        };\n    }, [alwaysOpen, items, transition]);\n\n    return (\n        <AccordionContext.Provider value={value}>\n            {printTag()}\n        </AccordionContext.Provider>\n    );\n};","import React from \"react\";\nimport {AccordionProvider} from \"./AccordionProvider\";\nimport {AccordionType, Tag} from \"../types\";\n\nexport const Accordion: React.FC<AccordionType> = ({children , as = \"div\", transition , alwaysOpen = false}) => {\n    return (\n        <AccordionProvider as={as} transition={transition} alwaysOpen={alwaysOpen}>\n            {children}\n        </AccordionProvider>\n    );\n};\n\nexport default Accordion;","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\nimport {AccordionContext} from \"./AccordionProvider\";\nimport {AccordionItemProps, Items, Transition} from \"../types\";\n\ninterface AccordionItemStore {\n    accordionRef: React.MutableRefObject<null> | null,\n    active: boolean,\n    items: Items,\n    hash: string,\n    toggle: () => void,\n    transition?: Transition | null,\n    alwaysOpen?: boolean,\n    isActive?: boolean\n}\n\nexport const AccordionItemContext = createContext<AccordionItemStore>({\n    accordionRef: null,\n    active: false,\n    items: {},\n    hash: \"\",\n    transition: null,\n    alwaysOpen: false,\n    toggle: () => {},\n    isActive: false,\n});\n\nexport const AccordionItemProvider: React.FC<AccordionItemProps> = ({children, isActive}) => {\n    const {accordionRef, items, setItems, transition, alwaysOpen} = useContext(AccordionContext);\n    const [active, setActive] = useState<boolean>(false);\n\n    const hash = useMemo(() => {\n        return Math.random().toString(36).substring(2, 9);\n    }, []);\n\n    useEffect(() => {\n        if (!(hash in items)) {\n            setItems({...items, [hash]: setActive});\n        }\n    }, [items]);\n\n    const value = useMemo(() => {\n        return {\n            accordionRef,\n            active,\n            toggle: () => setActive(!active),\n            items,\n            hash,\n            transition,\n            alwaysOpen,\n            isActive\n        }\n    }, [accordionRef, active, alwaysOpen, hash, isActive, items, transition]);\n\n    return (\n        <AccordionItemContext.Provider value={value}>\n            {children}\n        </AccordionItemContext.Provider>\n    );\n};","import React from \"react\";\nimport {AccordionItemProvider} from \"./AccordionItemProvider\";\nimport {AccordionItemProps} from \"../types\";\n\nconst AccordionItem: React.FC<AccordionItemProps> = ({children, isActive = false}) => {\n    return (\n        <AccordionItemProvider isActive={isActive}>\n            {children}\n        </AccordionItemProvider>\n    )\n};\n\nexport default AccordionItem;","import React, {useRef, useContext, useMemo, useEffect, useCallback} from \"react\";\nimport {AccordionItemContext} from \"./AccordionItemProvider\";\n\ntype Tag = \"button\" | \"div\" | \"li\" | \"ol\" | \"a\";\n\ninterface Props {\n    children: JSX.Element | Function,\n    as?: Tag,\n    className?: string,\n    href?: string,\n    onClick?: (e: Event) => void\n}\n\nconst AccordionHeader: React.FC<Props> = ({children, as = \"button\", className = \"\", href = \"\", onClick}) => {\n    const {hash, active, toggle, items, alwaysOpen, isActive} = useContext(AccordionItemContext);\n    const ref = useRef(null);\n\n    const TagName = useMemo(() => {\n        if([\"button\", \"div\", \"li\", \"ol\", \"a\"].includes(as)) {\n            return as;\n        }\n        return \"button\";\n    }, [as]);\n\n    useEffect(() => {\n        if (isActive && ref && ref.current) {\n            toggle()\n            const button = ref.current as HTMLElement;\n            button.setAttribute(\"aria-expanded\", \"true\");\n            const content = document.querySelector<HTMLElement>(`#${button.getAttribute('aria-controls')}`);\n            if (content) {\n                content.style.maxHeight = \"none\";\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        const toggleButton = (button: HTMLElement) => {\n            let ariaExpanded = button.getAttribute('aria-expanded');\n            button.setAttribute('aria-expanded', ariaExpanded === \"false\" ? \"true\" : \"false\");\n        }\n\n        const toggleContent = (content: HTMLDivElement | HTMLUListElement) => {\n            if (content) {\n                const transitionEnd = () => {\n                    if(content.style.maxHeight !== \"0px\") {\n                        content.style.maxHeight = \"none\";\n                    }\n\n                    content.removeEventListener('transitionend', transitionEnd);\n                }\n\n                content.addEventListener('transitionend', transitionEnd);\n\n                if (content.style.maxHeight === \"0px\") {\n                    content.style.maxHeight = content.scrollHeight+\"px\";\n                } else {\n                    content.style.maxHeight = content.scrollHeight+\"px\";\n                    content.style.maxHeight = content.scrollHeight+\"px\";\n                    content.style.maxHeight = \"0px\";\n                }\n            }\n        }\n\n        if (ref && ref.current) {\n            const button = ref?.current as HTMLElement;\n\n            const showAccordion = (e: Event) => {\n                // Pervent default\n                if (TagName === \"a\") {\n                    e.preventDefault();\n                }\n\n                toggle()\n\n                if (!alwaysOpen) {\n                    // Close content already open\n                    const buttons = button.parentNode?.querySelectorAll<HTMLElement>(`:scope > ${TagName}[aria-expanded='true']`);\n                    if (buttons) {\n                        buttons.forEach(item => {\n                            if (item && item !== button) {\n                                const id = item.id.split(\"-\")[1];\n                                items[id](false);\n                                toggleButton(item);\n                                const content = document.querySelector<HTMLDivElement | HTMLUListElement>(`#${item.getAttribute('aria-controls')}`);\n                                if (content) {\n                                    toggleContent(content);\n                                }\n                            }\n                        });\n                    }\n                }\n\n                // Toggle Button\n                toggleButton(button);\n\n                // Toggle Content\n                const content = document.querySelector(`#${button.getAttribute('aria-controls')}`) as HTMLDivElement | HTMLUListElement\n                toggleContent(content);\n\n                if (onClick) {\n                    onClick(e);\n                }\n            };\n\n            if (button) {\n                button.addEventListener('click', showAccordion);\n            }\n\n            return () => {\n                if (button) {\n                    button.removeEventListener('click', showAccordion);\n                }\n            };\n        }\n        return () => {}\n\n    }, [TagName, alwaysOpen, items, onClick, toggle]);\n\n    const button = useMemo(() => {\n        return (\n            <button\n                ref={ref}\n                id={`button-${hash}`}\n                aria-expanded=\"false\"\n                className={className}\n                aria-controls={`content-${hash}`}\n            >\n                {typeof children === \"function\" ? children({open: active}) : children}\n            </button>\n        )\n    }, [active]);\n\n    switch (TagName) {\n        case \"button\":\n            return button;\n        case \"div\":\n            return (\n                <div\n                    ref={ref}\n                    id={`button-${hash}`}\n                    aria-expanded=\"false\"\n                    className={className}\n                    aria-controls={`content-${hash}`}\n                >\n                    {typeof children === \"function\" ? children({open: active}) : children}\n                </div>\n            );\n        case \"li\":\n            return (\n                <li\n                    ref={ref}\n                    id={`button-${hash}`}\n                    aria-expanded=\"false\"\n                    className={className}\n                    aria-controls={`content-${hash}`}\n                >\n                    {typeof children === \"function\" ? children({open: active}) : children}\n                </li>\n            );\n        case \"ol\":\n            return (\n                <ol\n                    ref={ref}\n                    id={`button-${hash}`}\n                    aria-expanded=\"false\"\n                    className={className}\n                    aria-controls={`content-${hash}`}\n                >\n                    {typeof children === \"function\" ? children({open: active}) : children}\n                </ol>\n            );\n        case \"a\":\n            return  (\n                <a\n                    ref={ref}\n                    id={`button-${hash}`}\n                    href={href}\n                    aria-expanded=\"false\"\n                    className={className}\n                    aria-controls={`content-${hash}`}\n                >\n                    {typeof children === \"function\" ? children({open: active}) : children}\n                </a>\n            );\n        default :\n            return button;\n    }\n};\n\n\nexport default AccordionHeader;","import React, {useContext, useMemo} from \"react\";\nimport {AccordionItemContext} from \"./AccordionItemProvider\";\nimport {Tag} from \"../types\";\n\ninterface Props {\n    children: JSX.Element,\n    as?: Tag\n}\n\nconst AccordionBody: React.FC<Props> = ({children, as = \"div\"}) => {\n    const {hash, transition} = useContext(AccordionItemContext);\n\n    const TagName = useMemo(() => {\n        if([\"div\", \"ul\"].includes(as)) {\n            return as;\n        }\n        return \"div\";\n    }, [as]);\n\n    const transitionData = useMemo(() => {\n        const defaultData = {\n            duration: \"300ms\",\n            timingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n        }\n\n        if (transition && (\"duration\" in transition) && transition.duration) {\n            defaultData.duration = transition.duration;\n        }\n\n        if (transition && (\"timingFunction\" in transition) && transition.timingFunction) {\n            defaultData.timingFunction = transition.timingFunction;\n        }\n        return defaultData;\n    }, [transition]);\n\n    const div = useMemo(() => {\n        return (\n            <div\n                id={`content-${hash}`}\n                aria-labelledby={`button-${hash}`}\n                style={\n                    {\n                        maxHeight: \"0px\",\n                        transitionProperty: \"max-height\",\n                        overflow: \"hidden\",\n                        transitionDuration: transitionData.duration,\n                        transitionTimingFunction: transitionData.timingFunction\n                    }\n                }\n            >\n                {children}\n            </div>\n        )\n    }, [transitionData, hash]);\n\n    switch (TagName) {\n        case \"div\":\n            return div;\n        case \"ul\":\n            return (\n                <ul\n                    id={`content-${hash}`}\n                    aria-labelledby={`button-${hash}`}\n                    style={\n                        {\n                            maxHeight: \"0px\",\n                            transitionProperty: \"max-height\",\n                            overflow: \"hidden\",\n                            transitionDuration: transitionData.duration,\n                            transitionTimingFunction: transitionData.timingFunction\n                        }\n                    }\n                >\n                    {children}\n                </ul>\n            );\n        default :\n            return div;\n    }\n};\n\nexport default AccordionBody;"],"names":[],"mappings":";;AAWO,MAAM,gBAAgB,GAAG,aAAa,CAAiB;AAC1D,IAAA,YAAY,EAAE,IAAI;AAClB,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,QAAQ,EAAE,CAAC,IAAI,QAAO;AACtB,IAAA,UAAU,EAAE,IAAI;AAChB,IAAA,UAAU,EAAE,KAAK;AACpB,CAAA,CAAC,CAAC;AAEI,MAAM,iBAAiB,GAA4B,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAC,KAAI;AACjG,IAAA,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAQ,EAAE,CAAC,CAAC;AAE9C,IAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAK;AACzB,QAAA,IAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AACjC,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;AACjB,KAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAET,IAAA,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAK;QAC9B,MAAM,GAAG,IACL,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,GAAG,EAAE,YAAY,EACjB,EAAA,QAAQ,CACP,CACT,CAAC;AAEF,QAAA,QAAQ,OAAO;AACX,YAAA,KAAK,KAAK;AACN,gBAAA,OAAO,GAAG,CAAC;AACf,YAAA,KAAK,IAAI;gBACL,QACI,4BAAI,GAAG,EAAE,YAAY,EAChB,EAAA,QAAQ,CACR,EACR;AACL,YAAA;AACI,gBAAA,OAAO,GAAG,CAAC;AAClB,SAAA;KACJ,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,MAAM,KAAK,GAAG,OAAO,CAAC,MAAK;QACvB,OAAO;YACH,YAAY;YACZ,KAAK;YACL,QAAQ;YACR,UAAU;YACV,UAAU;SACb,CAAC;KACL,EAAE,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AAEpC,IAAA,QACI,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAQ,EAAC,EAAA,KAAK,EAAE,KAAK,EAClC,EAAA,QAAQ,EAAE,CACa,EAC9B;AACN,CAAC;;AC9DY,MAAA,SAAS,GAA4B,CAAC,EAAC,QAAQ,EAAG,EAAE,GAAG,KAAK,EAAE,UAAU,EAAG,UAAU,GAAG,KAAK,EAAC,KAAI;AAC3G,IAAA,QACI,KAAC,CAAA,aAAA,CAAA,iBAAiB,IAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,IACpE,QAAQ,CACO,EACtB;AACN;;ACKO,MAAM,oBAAoB,GAAG,aAAa,CAAqB;AAClE,IAAA,YAAY,EAAE,IAAI;AAClB,IAAA,MAAM,EAAE,KAAK;AACb,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,IAAI,EAAE,EAAE;AACR,IAAA,UAAU,EAAE,IAAI;AAChB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,MAAM,EAAE,MAAK,GAAG;AAChB,IAAA,QAAQ,EAAE,KAAK;AAClB,CAAA,CAAC,CAAC;AAEI,MAAM,qBAAqB,GAAiC,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,KAAI;AACxF,IAAA,MAAM,EAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAC,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC;IAC7F,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAC;AAErD,IAAA,MAAM,IAAI,GAAG,OAAO,CAAC,MAAK;AACtB,QAAA,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACrD,EAAE,EAAE,CAAC,CAAC;IAEP,SAAS,CAAC,MAAK;AACX,QAAA,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE;AAClB,YAAA,QAAQ,CAAC,EAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,SAAS,EAAC,CAAC,CAAC;AAC3C,SAAA;AACL,KAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAEZ,IAAA,MAAM,KAAK,GAAG,OAAO,CAAC,MAAK;QACvB,OAAO;YACH,YAAY;YACZ,MAAM;YACN,MAAM,EAAE,MAAM,SAAS,CAAC,CAAC,MAAM,CAAC;YAChC,KAAK;YACL,IAAI;YACJ,UAAU;YACV,UAAU;YACV,QAAQ;SACX,CAAA;AACL,KAAC,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AAE1E,IAAA,QACI,KAAA,CAAA,aAAA,CAAC,oBAAoB,CAAC,QAAQ,EAAA,EAAC,KAAK,EAAE,KAAK,EAAA,EACtC,QAAQ,CACmB,EAClC;AACN,CAAC;;ACtDK,MAAA,aAAa,GAAiC,CAAC,EAAC,QAAQ,EAAE,QAAQ,GAAG,KAAK,EAAC,KAAI;IACjF,QACI,KAAC,CAAA,aAAA,CAAA,qBAAqB,EAAC,EAAA,QAAQ,EAAE,QAAQ,EACpC,EAAA,QAAQ,CACW,EAC3B;AACL;;ACGM,MAAA,eAAe,GAAoB,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,QAAQ,EAAE,SAAS,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,OAAO,EAAC,KAAI;AACvG,IAAA,MAAM,EAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAC,GAAG,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAC7F,IAAA,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAEzB,IAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAK;AACzB,QAAA,IAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AAChD,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC;AACpB,KAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAET,SAAS,CAAC,MAAK;AACX,QAAA,IAAI,QAAQ,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE;AAChC,YAAA,MAAM,EAAE,CAAA;AACR,YAAA,MAAM,MAAM,GAAG,GAAG,CAAC,OAAsB,CAAC;AAC1C,YAAA,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AAC7C,YAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAc,CAAA,CAAA,EAAI,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAA,CAAE,CAAC,CAAC;AAChG,YAAA,IAAI,OAAO,EAAE;AACT,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;AACpC,aAAA;AACJ,SAAA;KACJ,EAAE,EAAE,CAAC,CAAC;IAEP,SAAS,CAAC,MAAK;AACX,QAAA,MAAM,YAAY,GAAG,CAAC,MAAmB,KAAI;YACzC,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AACxD,YAAA,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,YAAY,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;AACtF,SAAC,CAAA;AAED,QAAA,MAAM,aAAa,GAAG,CAAC,OAA0C,KAAI;AACjE,YAAA,IAAI,OAAO,EAAE;gBACT,MAAM,aAAa,GAAG,MAAK;AACvB,oBAAA,IAAG,OAAO,CAAC,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE;AAClC,wBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;AACpC,qBAAA;AAED,oBAAA,OAAO,CAAC,mBAAmB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAChE,iBAAC,CAAA;AAED,gBAAA,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAEzD,gBAAA,IAAI,OAAO,CAAC,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE;oBACnC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,GAAC,IAAI,CAAC;AACvD,iBAAA;AAAM,qBAAA;oBACH,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,GAAC,IAAI,CAAC;oBACpD,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,GAAC,IAAI,CAAC;AACpD,oBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;AACnC,iBAAA;AACJ,aAAA;AACL,SAAC,CAAA;AAED,QAAA,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE;AACpB,YAAA,MAAM,MAAM,GAAG,GAAG,EAAE,OAAsB,CAAC;AAE3C,YAAA,MAAM,aAAa,GAAG,CAAC,CAAQ,KAAI;;gBAE/B,IAAI,OAAO,KAAK,GAAG,EAAE;oBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;AACtB,iBAAA;AAED,gBAAA,MAAM,EAAE,CAAA;gBAER,IAAI,CAAC,UAAU,EAAE;;AAEb,oBAAA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,gBAAgB,CAAc,CAAY,SAAA,EAAA,OAAO,CAAwB,sBAAA,CAAA,CAAC,CAAC;AAC9G,oBAAA,IAAI,OAAO,EAAE;AACT,wBAAA,OAAO,CAAC,OAAO,CAAC,IAAI,IAAG;AACnB,4BAAA,IAAI,IAAI,IAAI,IAAI,KAAK,MAAM,EAAE;AACzB,gCAAA,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,gCAAA,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;gCACjB,YAAY,CAAC,IAAI,CAAC,CAAC;AACnB,gCAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAoC,CAAA,CAAA,EAAI,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAA,CAAE,CAAC,CAAC;AACpH,gCAAA,IAAI,OAAO,EAAE;oCACT,aAAa,CAAC,OAAO,CAAC,CAAC;AAC1B,iCAAA;AACJ,6BAAA;AACL,yBAAC,CAAC,CAAC;AACN,qBAAA;AACJ,iBAAA;;gBAGD,YAAY,CAAC,MAAM,CAAC,CAAC;;AAGrB,gBAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAA,CAAA,EAAI,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAA,CAAE,CAAsC,CAAA;gBACvH,aAAa,CAAC,OAAO,CAAC,CAAC;AAEvB,gBAAA,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,CAAC,CAAC,CAAC;AACd,iBAAA;AACL,aAAC,CAAC;AAEF,YAAA,IAAI,MAAM,EAAE;AACR,gBAAA,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACnD,aAAA;AAED,YAAA,OAAO,MAAK;AACR,gBAAA,IAAI,MAAM,EAAE;AACR,oBAAA,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACtD,iBAAA;AACL,aAAC,CAAC;AACL,SAAA;AACD,QAAA,OAAO,MAAO,GAAC,CAAA;AAEnB,KAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;AAElD,IAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAK;AACxB,QAAA,QACI,KACI,CAAA,aAAA,CAAA,QAAA,EAAA,EAAA,GAAG,EAAE,GAAG,EACR,EAAE,EAAE,CAAA,OAAA,EAAU,IAAI,CAAE,CAAA,EAAA,eAAA,EACN,OAAO,EACrB,SAAS,EAAE,SAAS,EAAA,eAAA,EACL,WAAW,IAAI,CAAA,CAAE,IAE/B,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAG,QAAQ,CAChE,EACZ;AACL,KAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAEb,IAAA,QAAQ,OAAO;AACX,QAAA,KAAK,QAAQ;AACT,YAAA,OAAO,MAAM,CAAC;AAClB,QAAA,KAAK,KAAK;AACN,YAAA,QACI,KACI,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,GAAG,EAAE,GAAG,EACR,EAAE,EAAE,CAAA,OAAA,EAAU,IAAI,CAAE,CAAA,EAAA,eAAA,EACN,OAAO,EACrB,SAAS,EAAE,SAAS,EAAA,eAAA,EACL,WAAW,IAAI,CAAA,CAAE,IAE/B,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAG,QAAQ,CACnE,EACR;AACN,QAAA,KAAK,IAAI;AACL,YAAA,QACI,KACI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,GAAG,EAAE,GAAG,EACR,EAAE,EAAE,CAAA,OAAA,EAAU,IAAI,CAAE,CAAA,EAAA,eAAA,EACN,OAAO,EACrB,SAAS,EAAE,SAAS,EAAA,eAAA,EACL,WAAW,IAAI,CAAA,CAAE,IAE/B,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAG,QAAQ,CACpE,EACP;AACN,QAAA,KAAK,IAAI;AACL,YAAA,QACI,KACI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,GAAG,EAAE,GAAG,EACR,EAAE,EAAE,CAAA,OAAA,EAAU,IAAI,CAAE,CAAA,EAAA,eAAA,EACN,OAAO,EACrB,SAAS,EAAE,SAAS,EAAA,eAAA,EACL,WAAW,IAAI,CAAA,CAAE,IAE/B,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAG,QAAQ,CACpE,EACP;AACN,QAAA,KAAK,GAAG;YACJ,QACI,2BACI,GAAG,EAAE,GAAG,EACR,EAAE,EAAE,CAAU,OAAA,EAAA,IAAI,EAAE,EACpB,IAAI,EAAE,IAAI,EAAA,eAAA,EACI,OAAO,EACrB,SAAS,EAAE,SAAS,EACL,eAAA,EAAA,CAAA,QAAA,EAAW,IAAI,CAAE,CAAA,EAAA,EAE/B,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAG,QAAQ,CACrE,EACN;AACN,QAAA;AACI,YAAA,OAAO,MAAM,CAAC;AACrB,KAAA;AACL;;ACnLM,MAAA,aAAa,GAAoB,CAAC,EAAC,QAAQ,EAAE,EAAE,GAAG,KAAK,EAAC,KAAI;IAC9D,MAAM,EAAC,IAAI,EAAE,UAAU,EAAC,GAAG,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAE5D,IAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAK;QACzB,IAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AAC3B,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;AACjB,KAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAET,IAAA,MAAM,cAAc,GAAG,OAAO,CAAC,MAAK;AAChC,QAAA,MAAM,WAAW,GAAG;AAChB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,cAAc,EAAE,4BAA4B;SAC/C,CAAA;QAED,IAAI,UAAU,KAAK,UAAU,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC,QAAQ,EAAE;AACjE,YAAA,WAAW,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC9C,SAAA;QAED,IAAI,UAAU,KAAK,gBAAgB,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC,cAAc,EAAE;AAC7E,YAAA,WAAW,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;AAC1D,SAAA;AACD,QAAA,OAAO,WAAW,CAAC;AACvB,KAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;AAEjB,IAAA,MAAM,GAAG,GAAG,OAAO,CAAC,MAAK;AACrB,QAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EACI,EAAE,EAAE,CAAW,QAAA,EAAA,IAAI,CAAE,CAAA,EAAA,iBAAA,EACJ,CAAU,OAAA,EAAA,IAAI,CAAE,CAAA,EACjC,KAAK,EACD;AACI,gBAAA,SAAS,EAAE,KAAK;AAChB,gBAAA,kBAAkB,EAAE,YAAY;AAChC,gBAAA,QAAQ,EAAE,QAAQ;gBAClB,kBAAkB,EAAE,cAAc,CAAC,QAAQ;gBAC3C,wBAAwB,EAAE,cAAc,CAAC,cAAc;aAC1D,EAGJ,EAAA,QAAQ,CACP,EACT;AACL,KAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;AAE3B,IAAA,QAAQ,OAAO;AACX,QAAA,KAAK,KAAK;AACN,YAAA,OAAO,GAAG,CAAC;AACf,QAAA,KAAK,IAAI;AACL,YAAA,QACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EACI,EAAE,EAAE,CAAW,QAAA,EAAA,IAAI,CAAE,CAAA,EAAA,iBAAA,EACJ,CAAU,OAAA,EAAA,IAAI,CAAE,CAAA,EACjC,KAAK,EACD;AACI,oBAAA,SAAS,EAAE,KAAK;AAChB,oBAAA,kBAAkB,EAAE,YAAY;AAChC,oBAAA,QAAQ,EAAE,QAAQ;oBAClB,kBAAkB,EAAE,cAAc,CAAC,QAAQ;oBAC3C,wBAAwB,EAAE,cAAc,CAAC,cAAc;iBAC1D,EAGJ,EAAA,QAAQ,CACR,EACP;AACN,QAAA;AACI,YAAA,OAAO,GAAG,CAAC;AAClB,KAAA;AACL;;;;"}