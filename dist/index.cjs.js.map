{"version":3,"file":"index.cjs.js","sources":["../src/components/Accordion.tsx","../src/components/AccordionItem.tsx","../src/components/AccordionHeader.tsx","../src/components/AccordionBody.tsx"],"sourcesContent":["import React, {createContext, useCallback, useMemo, useRef, useState} from \"react\";\nimport {Items, Transition} from \"../types\";\n\ninterface AccordionStore {\n    accordionRef:  React.MutableRefObject<null> | null,\n    items: Items,\n    setItems: (value: Items) => void,\n    transition?: Transition | null,\n    alwaysOpen?: boolean\n}\n\nexport const AccordionContext = createContext<AccordionStore>({\n    accordionRef: null,\n    items: {},\n    setItems: (data) => {},\n    transition: null,\n    alwaysOpen: false\n});\n\ninterface Props {\n    children: JSX.Element | JSX.Element[],\n    as?: string,\n    transition?: Transition,\n    alwaysOpen?: boolean,\n    className?: string\n}\n\nexport const Accordion: React.FC<Props> = ({children , as = \"div\", className = \"\", transition = undefined , alwaysOpen = false}) => {\n    const accordionRef = useRef(null);\n    const [items, setItems] = useState<Items>({});\n\n    const TagName: any = useMemo(() => {\n        if (as) {\n            return as\n        }\n        return \"div\";\n    }, [as]);\n\n    const value = useMemo(() => {\n        return {\n            accordionRef,\n            items,\n            setItems,\n            transition,\n            alwaysOpen\n        };\n    }, [alwaysOpen, items, transition]);\n\n    return (\n        <AccordionContext.Provider value={value}>\n            <TagName className={className}>\n                {children}\n            </TagName>\n        </AccordionContext.Provider>\n    );\n};\n\nexport default Accordion;","import React, {createContext, useCallback, useContext, useEffect, useMemo, useState} from \"react\";\nimport {Items, Transition} from \"../types\";\nimport {AccordionContext} from \"./Accordion\";\n\ninterface AccordionItemStore {\n    accordionRef: React.MutableRefObject<null> | null,\n    active: boolean,\n    items: Items,\n    hash: string,\n    toggle: () => void,\n    transition?: Transition | null,\n    alwaysOpen?: boolean,\n    isActive?: boolean\n}\n\nexport const AccordionItemContext = createContext<AccordionItemStore>({\n    accordionRef: null,\n    active: false,\n    items: {},\n    hash: \"\",\n    transition: null,\n    alwaysOpen: false,\n    toggle: () => {},\n    isActive: false,\n});\n\nexport interface Props {\n    children: JSX.Element | JSX.Element[] | Function,\n    isActive?: boolean,\n}\n\nconst AccordionItem: React.FC<Props> = ({children, isActive = false}) => {\n    const {accordionRef, items, setItems, transition, alwaysOpen} = useContext(AccordionContext);\n    const [active, setActive] = useState<boolean>(false);\n\n    const hash = useMemo(() => {\n        return Math.random().toString(36).substring(2, 9);\n    }, []);\n\n    useEffect(() => {\n        if (!(hash in items)) {\n            setItems({...items, [hash]: setActive});\n        }\n    }, [items]);\n\n    const value = useMemo(() => {\n        return {\n            accordionRef,\n            active,\n            toggle: () => setActive(!active),\n            items,\n            hash,\n            transition,\n            alwaysOpen,\n            isActive\n        }\n    }, [accordionRef, active, alwaysOpen, hash, isActive, items, transition]);\n\n    return (\n        <AccordionItemContext.Provider value={value}>\n            {typeof children === \"function\" ? children({open: active}) : children}\n        </AccordionItemContext.Provider>\n    )\n};\n\nexport default AccordionItem;","import React, {useRef, useContext, useMemo, useEffect} from \"react\";\nimport {AccordionItemContext} from \"./AccordionItem\";\n\ninterface Props {\n    children: JSX.Element | JSX.Element[],\n    as?: string,\n    className?: string,\n    href?: string,\n    onClick?: (e: Event) => void\n}\n\nconst AccordionHeader: React.FC<Props> = ({children, as = \"button\", className = \"\", href = \"\", onClick}) => {\n    const {hash, toggle, items, alwaysOpen, isActive} = useContext(AccordionItemContext);\n    const ref = useRef(null);\n\n    const TagName: any = useMemo(() => {\n        if(as) {\n            return as;\n        }\n        return \"button\";\n    }, [as]);\n\n    useEffect(() => {\n        if (isActive && ref && ref.current) {\n            toggle()\n            const button = ref.current as HTMLElement;\n            button.setAttribute(\"aria-expanded\", \"true\");\n            const content = document.querySelector<HTMLElement>(`#${button.getAttribute('aria-controls')}`);\n            if (content) {\n                content.style.maxHeight = \"none\";\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        const toggleButton = (button: HTMLElement) => {\n            let ariaExpanded = button.getAttribute('aria-expanded');\n            button.setAttribute('aria-expanded', ariaExpanded === \"false\" ? \"true\" : \"false\");\n        }\n\n        const toggleContent = (content: HTMLDivElement | HTMLUListElement) => {\n            if (content) {\n                const transitionEnd = () => {\n                    if(content.style.maxHeight !== \"0px\") {\n                        content.style.maxHeight = \"none\";\n                    }\n\n                    content.removeEventListener('transitionend', transitionEnd);\n                }\n\n                content.addEventListener('transitionend', transitionEnd);\n\n                if (content.style.maxHeight === \"0px\") {\n                    content.style.maxHeight = content.scrollHeight+\"px\";\n                } else {\n                    content.style.maxHeight = content.scrollHeight+\"px\";\n                    content.style.maxHeight = content.scrollHeight+\"px\";\n                    content.style.maxHeight = \"0px\";\n                }\n            }\n        }\n\n        if (ref && ref.current) {\n            const button = ref?.current as HTMLElement;\n\n            const showAccordion = (e: Event) => {\n                // Pervent default\n                if (TagName === \"a\") {\n                    e.preventDefault();\n                }\n\n                toggle()\n\n                if (!alwaysOpen) {\n                    // Close content already open\n                    const buttons = button.parentNode?.querySelectorAll<HTMLElement>(`:scope > ${TagName}[aria-expanded='true']`);\n                    if (buttons) {\n                        buttons.forEach(item => {\n                            if (item && item !== button) {\n                                const id = item.id.split(\"-\")[1];\n                                items[id](false);\n                                toggleButton(item);\n                                const content = document.querySelector<HTMLDivElement | HTMLUListElement>(`#${item.getAttribute('aria-controls')}`);\n                                if (content) {\n                                    toggleContent(content);\n                                }\n                            }\n                        });\n                    }\n                }\n\n                // Toggle Button\n                toggleButton(button);\n\n                // Toggle Content\n                const content = document.querySelector(`#${button.getAttribute('aria-controls')}`) as HTMLDivElement | HTMLUListElement\n                toggleContent(content);\n\n                if (onClick) {\n                    onClick(e);\n                }\n            };\n\n            if (button) {\n                button.addEventListener('click', showAccordion);\n            }\n\n            return () => {\n                if (button) {\n                    button.removeEventListener('click', showAccordion);\n                }\n            };\n        }\n        return () => {}\n\n    }, [TagName, alwaysOpen, items, onClick, toggle]);\n\n    if (TagName === \"a\") {\n        return  (\n            <a\n                ref={ref}\n                id={`button-${hash}`}\n                href={href}\n                aria-expanded=\"false\"\n                className={className}\n                aria-controls={`content-${hash}`}\n            >\n                {children}\n            </a>\n        );\n    }\n\n    return  (\n        <TagName\n            ref={ref}\n            id={`button-${hash}`}\n            aria-expanded=\"false\"\n            className={className}\n            aria-controls={`content-${hash}`}\n        >\n            {children}\n        </TagName>\n    );\n};\n\n\nexport default AccordionHeader;","import React, {useContext, useMemo} from \"react\";\nimport {AccordionItemContext} from \"./AccordionItem\";\n\ninterface Props {\n    children: JSX.Element | JSX.Element[],\n    as?: string\n}\n\nconst AccordionBody: React.FC<Props> = ({children, as = \"div\"}) => {\n    const {hash, transition} = useContext(AccordionItemContext);\n\n    const TagName: any = useMemo(() => {\n        if(as) {\n            return as;\n        }\n        return \"div\";\n    }, [as]);\n\n    const transitionData = useMemo(() => {\n        const defaultData = {\n            duration: \"300ms\",\n            timingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n        }\n\n        if (transition && (\"duration\" in transition) && transition.duration) {\n            defaultData.duration = transition.duration;\n        }\n\n        if (transition && (\"timingFunction\" in transition) && transition.timingFunction) {\n            defaultData.timingFunction = transition.timingFunction;\n        }\n        return defaultData;\n    }, [transition]);\n\n    return (\n        <TagName\n            id={`content-${hash}`}\n            aria-labelledby={`button-${hash}`}\n            style={\n                {\n                    maxHeight: \"0px\",\n                    transitionProperty: \"max-height\",\n                    overflow: \"hidden\",\n                    transitionDuration: transitionData.duration,\n                    transitionTimingFunction: transitionData.timingFunction\n                }\n            }\n        >\n            {children}\n        </TagName>\n    );\n};\n\nexport default AccordionBody;"],"names":["createContext","useRef","useState","useMemo","React","useContext","useEffect"],"mappings":"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"}